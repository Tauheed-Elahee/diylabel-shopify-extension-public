{% comment %}
  DIY Label App Embed - Appears in Theme Customizer under "App embeds"
  This is the CORRECT file that matches the handle in shopify.extension.toml
{% endcomment %}

{% if app.enabled %}
<!-- DIY Label App Embed: Active -->
<script>
  console.log('‚úÖ DIY Label App Embed: ACTIVE and ENABLED');
  console.log('App settings:', {{ app | json }});
  
  window.DIYLabelConfig = window.DIYLabelConfig || {};
  window.DIYLabelConfig.appEmbed = {
    enabled: {{ app.enabled | json }},
    theme: {{ app.theme | default: 'light' | json }},
    searchRadius: {{ app.search_radius | default: 25 | json }},
    showOnAllProducts: {{ app.show_on_all_products | default: true | json }},
    autoInject: {{ app.auto_inject | default: true | json }},
    apiUrl: {{ app.api_url | default: 'https://increasing-exercise-calculation-yo.trycloudflare.com' | json }},
    shopDomain: {{ shop.permanent_domain | json }},
    debugMode: {{ app.debug_mode | default: true | json }}
  };
  
  console.log('üîß DIY Label Config:', window.DIYLabelConfig.appEmbed);
</script>

<!-- Debug indicator (always show for testing) -->
<div id="diy-label-debug-indicator" style="position: fixed; top: 10px; left: 10px; background: #28a745; color: white; padding: 8px 12px; border-radius: 4px; z-index: 9999; font-size: 12px; font-family: monospace; box-shadow: 0 2px 8px rgba(0,0,0,0.3);">
  ‚úÖ DIY Label: App Embed ACTIVE
</div>

<script>
(function() {
  'use strict';
  
  const config = window.DIYLabelConfig.appEmbed;
  console.log('üöÄ DIY Label: App embed script starting with config:', config);
  
  // Always show debug info for now
  console.log('üìç Current page:', window.location.pathname);
  console.log('üîç Is product page:', window.location.pathname.includes('/products/'));
  
  // Function to get product ID from various sources
  function getProductId() {
    let productId = null;
    
    // Method 1: Try meta tag
    const productMeta = document.querySelector('meta[property="product:id"]');
    if (productMeta) {
      productId = productMeta.getAttribute('content');
      console.log('üéØ Found product ID from meta tag:', productId);
      return productId;
    }
    
    // Method 2: Try Shopify Analytics
    if (typeof window.ShopifyAnalytics !== 'undefined' && window.ShopifyAnalytics.meta && window.ShopifyAnalytics.meta.product) {
      productId = window.ShopifyAnalytics.meta.product.id;
      console.log('üéØ Found product ID from ShopifyAnalytics:', productId);
      return productId;
    }
    
    // Method 3: Try global product object
    if (typeof window.product !== 'undefined' && window.product.id) {
      productId = window.product.id;
      console.log('üéØ Found product ID from window.product:', productId);
      return productId;
    }
    
    // Method 4: Try to extract from URL (get handle)
    if (window.location.pathname.includes('/products/')) {
      const pathParts = window.location.pathname.split('/');
      const productIndex = pathParts.indexOf('products');
      if (productIndex !== -1 && pathParts[productIndex + 1]) {
        productId = pathParts[productIndex + 1]; // This will be the handle
        console.log('üéØ Found product handle from URL:', productId);
        return productId;
      }
    }
    
    console.log('‚ùå No product ID found');
    return null;
  }
  
  // Function to create a test widget (always show for debugging)
  function createTestWidget(productId) {
    console.log('üé® Creating test widget for product:', productId || 'none');
    
    // Check if widget already exists
    if (document.getElementById('diy-label-test-widget')) {
      console.log('‚ö†Ô∏è Test widget already exists, skipping');
      return;
    }
    
    // Find injection point
    let injectionPoint = document.querySelector('.product-form') || 
                        document.querySelector('.product__form') || 
                        document.querySelector('main') || 
                        document.body;
    
    console.log('üìç Injection point:', injectionPoint.tagName, injectionPoint.className);
    
    // Create widget container
    const widgetContainer = document.createElement('div');
    widgetContainer.id = 'diy-label-test-widget';
    widgetContainer.style.cssText = 
      'margin: 20px 0; ' +
      'padding: 20px; ' +
      'border: 2px solid #28a745; ' +
      'border-radius: 8px; ' +
      'background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); ' +
      'font-family: system-ui, -apple-system, sans-serif; ' +
      'box-shadow: 0 4px 12px rgba(0,0,0,0.1);';
    
    // Create widget content
    widgetContainer.innerHTML = 
      '<div style="text-align: center;">' +
      '<h3 style="margin: 0 0 12px 0; color: #28a745; font-size: 18px;">üå± DIY Label Widget Test</h3>' +
      '<p style="margin: 0 0 8px 0; color: #666; font-size: 14px;"><strong>Status:</strong> App Embed Working!</p>' +
      '<p style="margin: 0 0 8px 0; color: #666; font-size: 14px;"><strong>Product ID:</strong> ' + (productId || 'Not found') + '</p>' +
      '<p style="margin: 0 0 8px 0; color: #666; font-size: 14px;"><strong>Shop:</strong> ' + config.shopDomain + '</p>' +
      '<p style="margin: 0 0 16px 0; color: #666; font-size: 14px;"><strong>API URL:</strong> ' + config.apiUrl + '</p>' +
      '<div style="padding: 16px; background: white; border-radius: 6px; border: 1px solid #dee2e6;">' +
      '<p style="margin: 0 0 12px 0; color: #333; font-weight: 600;">Widget would load here:</p>' +
      '<div style="height: 200px; background: #f8f9fa; border: 2px dashed #dee2e6; border-radius: 4px; display: flex; align-items: center; justify-content: center;">' +
      '<div style="text-align: center; color: #6c757d;">' +
      '<div style="font-size: 32px; margin-bottom: 8px;">üó∫Ô∏è</div>' +
      '<p style="margin: 0; font-size: 14px;">Interactive Map & Print Shops</p>' +
      '</div>' +
      '</div>' +
      '</div>' +
      '<button onclick="this.parentElement.style.display=\'none\'" style="margin-top: 12px; padding: 8px 16px; background: #dc3545; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 12px;">Hide Test Widget</button>' +
      '</div>';
    
    // Insert widget
    if (injectionPoint.parentNode) {
      injectionPoint.parentNode.insertBefore(widgetContainer, injectionPoint.nextSibling);
    } else {
      injectionPoint.appendChild(widgetContainer);
    }
    
    console.log('‚úÖ Test widget created and inserted');
  }
  
  // Main initialization function
  function initializeDIYLabel() {
    console.log('üöÄ DIY Label: Starting initialization...');
    
    const productId = getProductId();
    
    // For testing, always create the widget
    createTestWidget(productId);
    
    // Also try to load the real widget if we have a product ID
    if (productId) {
      console.log('üîÑ Would load real widget for product:', productId);
      // TODO: Load real widget iframe here
    }
  }
  
  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeDIYLabel);
  } else {
    // DOM is already ready
    setTimeout(initializeDIYLabel, 100);
  }
  
})();
</script>

{% else %}
<!-- DIY Label App Embed: DISABLED -->
<script>
  console.log('‚ùå DIY Label App Embed: DISABLED in theme customizer');
</script>

<div id="diy-label-debug-indicator" style="position: fixed; top: 10px; left: 10px; background: #dc3545; color: white; padding: 8px 12px; border-radius: 4px; z-index: 9999; font-size: 12px; font-family: monospace; box-shadow: 0 2px 8px rgba(0,0,0,0.3);">
  ‚ùå DIY Label: App Embed DISABLED
</div>
{% endif %}

{% schema %}
{
  "name": "DIY Label",
  "settings": [
    {
      "type": "paragraph",
      "content": "üå± Enable DIY Label to show local printing options on product pages. Customers can choose nearby print shops to reduce shipping and support local businesses."
    },
    {
      "type": "checkbox",
      "id": "enabled",
      "label": "Enable DIY Label",
      "default": true
    },
    {
      "type": "header",
      "content": "Display Settings"
    },
    {
      "type": "checkbox",
      "id": "auto_inject",
      "label": "Auto-inject on Product Pages",
      "info": "Automatically add widget to product pages when enabled",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_on_all_products",
      "label": "Show on All Products",
      "info": "Display widget on all products (otherwise only products with DIY Label enabled)",
      "default": true
    },
    {
      "type": "header",
      "content": "Widget Settings"
    },
    {
      "type": "select",
      "id": "theme",
      "label": "Widget Theme",
      "options": [
        {
          "value": "light",
          "label": "Light"
        },
        {
          "value": "dark",
          "label": "Dark"
        },
        {
          "value": "auto",
          "label": "Auto (matches system)"
        }
      ],
      "default": "light",
      "info": "Choose the visual theme for the widget"
    },
    {
      "type": "range",
      "id": "search_radius",
      "label": "Search Radius (miles)",
      "min": 5,
      "max": 100,
      "step": 5,
      "default": 25,
      "info": "How far customers can search for print shops"
    },
    {
      "type": "header",
      "content": "Advanced Settings"
    },
    {
      "type": "url",
      "id": "api_url",
      "label": "API URL",
      "info": "DIY Label API endpoint (leave default unless instructed otherwise)",
      "default": "https://increasing-exercise-calculation-yo.trycloudflare.com"
    },
    {
      "type": "checkbox",
      "id": "debug_mode",
      "label": "Debug Mode",
      "info": "Show debug information in browser console (for troubleshooting)",
      "default": true
    }
  ]
}
{% endschema %}